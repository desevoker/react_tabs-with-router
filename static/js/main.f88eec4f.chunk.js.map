{"version":3,"sources":["components/Layout.tsx","components/HomePage.tsx","components/Tabs.tsx","components/TabsPage.tsx","components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Layout","className","to","isActive","classNames","HomePage","Tabs","tabs","selectedTab","map","tab","id","title","content","TabsPage","tabId","useParams","find","PageNotFound","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"qNAGaA,EAAS,kBACpB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,GADJ,EAFb,kBASA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,GADJ,EAFb,yBAYN,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UA/Bc,ECHTI,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,sBADsB,ECSXK,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,KACAC,EAFmC,EAEnCA,YAFmC,OAInC,sBAAK,UAAQ,gBAAb,UACE,qBAAKP,UAAU,gBAAf,SACE,6BACGM,EAAKE,KAAI,SAAAC,GAAG,OACX,oBAEE,UAAQ,MACRT,UAAWG,IAAW,CACpB,YAAaM,EAAIC,MAAJ,OAAWH,QAAX,IAAWA,OAAX,EAAWA,EAAaG,MAJzC,SAOE,cAAC,IAAD,CAAMT,GAAE,aAAQQ,EAAIC,IAAM,UAAQ,UAAlC,SACGD,EAAIE,SAPFF,EAAIC,GAFA,QAgBjB,qBAAKV,UAAU,QAAQ,UAAQ,aAA/B,SACGO,EACGA,EAAYK,QACZ,0BA1B2B,ECL/BN,EAAc,CAClB,CAAEI,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MAEFP,EAAcD,EAAKU,MAAK,qBAAGN,KAAgBI,CAAnB,IAE9B,OACE,qCACE,oBAAId,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAMM,KAAMA,EAAMC,YAAaA,MAGpC,ECtBYU,EAAe,kBAC1B,oBAAIjB,UAAU,QAAd,2BAD0B,ECefkB,G,kBAAM,kBACjB,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnB,GAAG,IAAIqB,SAAO,MAEpD,cAAC,IAAD,CAAOH,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,QAGjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,UAXZ,GCXnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.f88eec4f.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Layout = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'is-active': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'is-active': isActive,\n            })}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab?: Tab;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTab,\n}) => (\n  <div data-cy=\"TabsComponent\">\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            data-cy=\"Tab\"\n            className={classNames({\n              'is-active': tab.id === selectedTab?.id,\n            })}\n          >\n            <Link to={`../${tab.id}`} data-cy=\"TabLink\">\n              {tab.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"TabContent\">\n      {selectedTab\n        ? selectedTab.content\n        : 'Please select a tab'}\n    </div>\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\nimport { Tabs } from './Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  const selectedTab = tabs.find(({ id }) => id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <Tabs tabs={tabs} selectedTab={selectedTab} />\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport {\n  Layout,\n  HomePage,\n  TabsPage,\n  PageNotFound,\n} from './components';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<HomePage />} />\n\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"tabs\">\n        <Route path=\":tabId?\" element={<TabsPage />} />\n      </Route>\n\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}